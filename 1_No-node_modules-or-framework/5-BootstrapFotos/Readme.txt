Show Html and Images with Node Server
  App folder: BootstrapFotos
  Server Code from: https://www.pabbly.com/tutorials/node-js-http-module-serving-static-files-html-css-images/
  Html Code from: https://www.w3schools.com/bootstrap/bootstrap_images.asp
      0. Store images
          public/fjords.jpg
          public/lights.jpg
          public/nature.jpg
          bublic/butterfly.png
      1. Make html Bootstrap file public/index.html
        1.1 index.html
              <!DOCTYPE html>
              <html lang="en">
              <head>
                <title>Bootstrap Example</title>
                <meta charset="utf-8">
                <meta name="viewport" content="width=device-width, initial-scale=1">
                <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
                <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
                <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
              </head>
              <body>
              <div class="container">
                <h2>Image Gallery</h2>
                <p>The .thumbnail class can be used to display an image gallery.</p>
                <p>The .caption class adds proper padding and a dark grey color to text inside thumbnails.</p>
                <p>Click on the images to enlarge them.</p>
                <div class="row">
                  <div class="col-md-4">
                    <div class="thumbnail">
                      <a href="lights.jpg" target="_blank">
                        <img src="lights.jpg" alt="Lights" style="width:100%">
                        <div class="caption">
                          <p>Lorem ipsum donec id elit non mi porta gravida at eget metus.</p>
                        </div>
                      </a>
                    </div>
                  </div>
                  <div class="col-md-4">
                    <div class="thumbnail">
                      <a href="nature.jpg" target="_blank">
                        <img src="nature.jpg" alt="Nature" style="width:100%">
                        <div class="caption">
                          <p>Lorem ipsum donec id elit non mi porta gravida at eget metus.</p>
                        </div>
                      </a>
                    </div>
                  </div>
                  <div class="col-md-4">
                    <div class="thumbnail">
                      <a href="fjords.jpg" target="_blank">
                        <img src="fjords.jpg" alt="Fjords" style="width:100%">
                        <div class="caption">
                          <p>Lorem ipsum donec id elit non mi porta gravida at eget metus.</p>
                        </div>
                      </a>
                    </div>
                  </div>
                </div>
              </div>
              </body>
              </html>
      2. Make a server file appServer3.js
        2.1 appServer3.js
              // HTTP Module for Creating Server and Serving Static Files Using Node.js
              // Static Files: HTML, CSS, JS, Images
              // Get Complete Source Code from Pabbly.com
              var http = require("http");
              var fs = require("fs");
              var path = require("path");
              http
                .createServer(function (req, res) {
                  if (req.url === "/" || req.url === "/index.html") {
                    fs.readFile("./public/index.html", "UTF-8", function (err, html) {
                      res.writeHead(200, { "Content-Type": "text/html" });
                      res.end(html);
                    });
                  } else if (req.url.match(".css$")) {
                    var cssPath = path.join(__dirname, "public", req.url);
                    var fileStream = fs.createReadStream(cssPath, "UTF-8");
                    res.writeHead(200, { "Content-Type": "text/css" });
                    fileStream.pipe(res);
                  } else if (req.url.match(".jpg$|.png$")) {
                    var imagePath = path.join(__dirname, "public", req.url);
                    var fileStream = fs.createReadStream(imagePath);
                    res.writeHead(200, { "Content-Type": "image/png" });
                    fileStream.pipe(res);
                  } else {
                    res.writeHead(404, { "Content-Type": "text/html" });
                    res.end("No Page Found");
                  }
                })
                .listen(3000);
      3. Run Servers in Node Terminal
        3.1 BootstrapFotos> node .\appServer3.js
      4. Request Website in Browser
        4.1 URL http://localhost:3000/
        4.2 URL http://localhost:3000/index.html
        4.2 URL http://localhost:3000/butterfly.png
        4.3 URL http://localhost:3000/nature.jpg
        4.4 URL http://localhost:3000/public/index.html	
                  Output: No Page Found
        4.5 URL http://localhost:3000/public/butterfly.png
                  Server crash: Emitted 'error' event on ReadStream instance at:...
